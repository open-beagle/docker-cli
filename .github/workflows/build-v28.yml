name: Build Release v28 Images

on:
  push:
    branches:
      - release-v28
  workflow_dispatch: # 允许手动触发

env:
  BUILD_VERSION: v28.3.2
  BUILDX_VERSION: v0.25.0

jobs:
  build:
    name: Build Images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Github Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Remove 'v' prefix and set new env var
        id: strip_v
        run: |
          echo "BUILD_VERSION_WITHOUT_V=${BUILD_VERSION#v}" >> $GITHUB_ENV

      - name: Cross Build
        run: |
          docker run --rm -v ${{ github.workspace }}:/go/src/github.com/docker/cli \
            -w /go/src/github.com/docker/cli \
            -e VERSION=${{ env.BUILD_VERSION_WITHOUT_V }}-beagle \
            -e PLATFORM="© 2018 BeagleCloud Team" \
            ghcr.io/${{ github.repository_owner }}/golang:1.24-bookworm \
            bash -c "bash ./.beagle/build.sh"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: buildx-amd64
        env:
          TARGET_ARCH: amd64
        run: |
          docker run --rm -v ${{ github.workspace }}:/go/src/github.com/docker/cli \
            -w /go/src/github.com/docker/cli \
            ghcr.io/${{ github.repository_owner }}/docker-buildx:${{ env.BUILDX_VERSION }}-${{ env.TARGET_ARCH }} \
            sh -c "mkdir -p build && cp /usr/libexec/docker/cli-plugins/docker-buildx build/docker-buildx-linux-${{ env.TARGET_ARCH }}"

      - name: buildx-arm64
        env:
          TARGET_ARCH: arm64
        run: |
          docker run --rm -v ${{ github.workspace }}:/go/src/github.com/docker/cli \
            -w /go/src/github.com/docker/cli \
            ghcr.io/${{ github.repository_owner }}/docker-buildx:${{ env.BUILDX_VERSION }}-${{ env.TARGET_ARCH }} \
            sh -c "mkdir -p build && cp /usr/libexec/docker/cli-plugins/docker-buildx build/docker-buildx-linux-${{ env.TARGET_ARCH }}"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push images for amd64
        uses: docker/build-push-action@v5
        with:
          context: .
          file: .beagle/build.Dockerfile
          push: true
          platforms: linux/amd64
          tags: |
            ghcr.io/${{ github.repository_owner }}/docker-cli:${{ env.BUILD_VERSION }}-amd64
          build-args: |
            BASE=alpine:3
            VERSION=${{ env.BUILD_VERSION }}
            TARGETOS=linux
            TARGETARCH=amd64
          provenance: false
          sbom: false

      - name: Build and push images for arm64
        uses: docker/build-push-action@v5
        with:
          context: .
          file: .beagle/build.Dockerfile
          push: true
          platforms: linux/arm64
          tags: |
            ghcr.io/${{ github.repository_owner }}/docker-cli:${{ env.BUILD_VERSION }}-arm64
          build-args: |
            BASE=alpine:3
            VERSION=${{ env.BUILD_VERSION }}
            TARGETOS=linux
            TARGETARCH=arm64
          provenance: false
          sbom: false

      - name: Create and push multi-arch manifest
        run: |
          docker manifest create ghcr.io/${{ github.repository_owner }}/docker-cli:${{ env.BUILD_VERSION }} \
            ghcr.io/${{ github.repository_owner }}/docker-cli:${{ env.BUILD_VERSION }}-amd64 \
            ghcr.io/${{ github.repository_owner }}/docker-cli:${{ env.BUILD_VERSION }}-arm64 
          docker manifest push ghcr.io/${{ github.repository_owner }}/docker-cli:${{ env.BUILD_VERSION }}
